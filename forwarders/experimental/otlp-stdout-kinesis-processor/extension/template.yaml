AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: AWS Lambda Extension that forwards OTLP records to OpenTelemetry collectors

Resources:
  ExtensionLayerARM64:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
      BuildArchitecture: arm64
    Properties:
      RetentionPolicy: Retain
      LayerName: !Sub '${AWS::StackName}-layer-arm64'
      ContentUri: layer/
      CompatibleArchitectures:
        - arm64
      CompatibleRuntimes:
        - python3.13

  ExtensionLayerAMD64:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
      BuildArchitecture: arm64
    Properties:
      RetentionPolicy: Retain
      LayerName: !Sub '${AWS::StackName}-layer-amd64'
      ContentUri: layer/
      CompatibleArchitectures:
        - x86_64

  ExampleFunctionARM64:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-function-arm64'
      CodeUri: example/
      Handler: app.handler
      Runtime: python3.13
      Tracing: Disabled
      Architectures:
        - arm64
      LoggingConfig:
        LogFormat: JSON
        ApplicationLogLevel: INFO
        SystemLogLevel: WARN
      FunctionUrlConfig:
        AuthType: NONE
      Layers:
        - !Ref ExtensionLayerARM64
      Environment:
        Variables:
          OTLP_STDOUT_SPAN_EXPORTER_OUTPUT_TYPE: pipe
          OTEL_LITE_EXTENSION_ENABLE_PLATFORM_TELEMETRY: true
          OTEL_LITE_EXTENSION_STREAM_NAME: !ImportValue otlp-stdout-kinesis-processor:otlp-stream-name
      Policies:
        - KinesisCrudPolicy:
            StreamName: !ImportValue otlp-stdout-kinesis-processor:otlp-stream-name

Outputs:
  ExtensionLayerARM64Arn:
    Description: "ARN of the extension layer for arm64"
    Value: !Ref ExtensionLayerARM64
  ExampleFunctionUrl:
    Description: "URL of the example function for arm64"
    Value: !GetAtt ExampleFunctionARM64Url.FunctionUrl
