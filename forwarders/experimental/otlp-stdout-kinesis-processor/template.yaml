AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: AWS Lambda function that forwards Kinesis wrapped OTLP records to OpenTelemetry collectors

Parameters:
  KinesisStreamMode:
    Type: String
    Default: PROVISIONED
    AllowedValues:
      - PROVISIONED
      - ON_DEMAND
    Description: The capacity mode of the Kinesis stream (PROVISIONED or ON_DEMAND)
  ShardCount:
    Type: Number
    Default: 1
    Description: Number of shards when using PROVISIONED mode
    MinValue: 1
  VpcId:
    Type: String
    Description: (Optional) VPC ID for VPC deployment
    Default: ""
  SubnetIds:
    Type: CommaDelimitedList
    Description: (Optional) List of subnet IDs for VPC deployment
    Default: ""

Conditions:
  IsProvisionedMode: !Equals [!Ref KinesisStreamMode, "PROVISIONED"]
  HasVpcConfig: !Not [!Equals [!Ref VpcId, ""]]

Resources:
  ProcessorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: kinesis_processor
    Properties:
      FunctionName: !Ref AWS::StackName
      Description: !Sub "Processes OTLP data from Kinesis stream in AWS Account ${AWS::AccountId}"
      CodeUri: processor/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - arm64
      Timeout: 60
      Tracing: Disabled
      LoggingConfig:
        LogFormat: JSON
        ApplicationLogLevel: INFO
        SystemLogLevel: INFO
      Environment:
        Variables:
          LAMBDA_EXTENSION_SPAN_PROCESSOR_MODE: async
          LAMBDA_TRACING_ENABLE_FMT_LAYER: false
          OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4318
          OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
          OPENTELEMETRY_EXTENSION_LOG_LEVEL: DEBUG
          OPENTELEMETRY_COLLECTOR_CONFIG_URI: /opt/collector.yaml
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "secretsmanager:BatchGetSecretValue"
                - "secretsmanager:ListSecrets"
                - "xray:PutTraceSegments"
                - "xray:PutSpans"
                - "xray:PutSpansForIndexing"
              Resource: "*"
            - Effect: Allow
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
            - Effect: Allow
              Action:
                - "kinesis:GetRecords"
                - "kinesis:GetShardIterator"
                - "kinesis:DescribeStream"
                - "kinesis:ListShards"
              Resource: !GetAtt "OtlpKinesisStream.Arn"
      Layers:
        - !Ref CollectorConfig
        - arn:aws:lambda:us-east-1:961341555982:layer:ocel-arm64-spaneventtolog-0_123_0-local:6
      VpcConfig: !If 
        - HasVpcConfig
        - SecurityGroupIds: 
            - !Ref  SecurityGroup
          SubnetIds: !Ref SubnetIds
        - !Ref AWS::NoValue
      Events:
        Stream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt "OtlpKinesisStream.Arn"
            StartingPosition: LATEST
            BatchSize: 100
            MaximumBatchingWindowInSeconds: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: HasVpcConfig
    Properties:
      GroupDescription: Security group for OTLP Kinesis Processor Lambda
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  OtlpKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub "${AWS::StackName}-otlp-stream"
      RetentionPeriodHours: 24
      ShardCount: !If [IsProvisionedMode, !Ref ShardCount, !Ref "AWS::NoValue"]
      StreamModeDetails: !If
        - IsProvisionedMode
        - !Ref "AWS::NoValue"
        - StreamMode: !Ref KinesisStreamMode

  CollectorConfig:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${AWS::StackName}-collector-config"
      Description: "Layer for the collector configuration"
      ContentUri: config/
    Metadata:
      BuildMethod: makefile

Outputs:
  ProcessorFunctionArn:
    Description: ARN of the Kinesis processor Lambda function
    Value: !GetAtt ProcessorFunction.Arn

  SecurityGroupId:
    Description: ID of the security group for the Kinesis processor Lambda function
    Condition: HasVpcConfig
    Value: !Ref SecurityGroup

  KinesisStreamName:
    Description: Name of the Kinesis stream
    Value: !Ref OtlpKinesisStream
    Export:
      Name: !Sub "${AWS::StackName}:otlp-stream-name"
